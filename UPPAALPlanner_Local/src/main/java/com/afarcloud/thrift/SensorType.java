/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.afarcloud.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum SensorType implements TEnum {
  soil_temperature(0),
  electrical_conductivity_bulk(1),
  electrical_conductivity_pores(2),
  temperature_teros12(3),
  volumetric_water_content_mineral_soil(4),
  relative_dielectric_constant(5),
  soil_matrix_potential(6),
  temperature_teros21(7),
  air_temperature(8),
  air_humidity(9),
  water_consumption(10),
  dry_matter(11),
  d_value(12),
  protein(13),
  fibre(14),
  COLLAR(15);

  private final int value;

  private SensorType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static SensorType findByValue(int value) { 
    switch (value) {
      case 0:
        return soil_temperature;
      case 1:
        return electrical_conductivity_bulk;
      case 2:
        return electrical_conductivity_pores;
      case 3:
        return temperature_teros12;
      case 4:
        return volumetric_water_content_mineral_soil;
      case 5:
        return relative_dielectric_constant;
      case 6:
        return soil_matrix_potential;
      case 7:
        return temperature_teros21;
      case 8:
        return air_temperature;
      case 9:
        return air_humidity;
      case 10:
        return water_consumption;
      case 11:
        return dry_matter;
      case 12:
        return d_value;
      case 13:
        return protein;
      case 14:
        return fibre;
      case 15:
        return COLLAR;
      default:
        return null;
    }
  }
}
